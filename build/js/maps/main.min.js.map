{"version":3,"sources":["main.js"],"names":["paymentMethod","form","methods","document","querySelectorAll","addEventListener","e","target","closest","forEach","item","classList","remove","add","paymentValidate","email","querySelector","payment","paymentMethods","error","checkEmail","caption","value","trim","test","textContent","noMethod","checked","preventDefault","setTimeout","name","replace"],"mappings":"AAEA,SAAAA,cAAAC,GACA,MAAAC,EAAAC,SAAAC,iBAAA,yBAEAH,EAAAI,iBAAA,SAAAC,IACAA,EAAAC,OAAAC,QAAA,2BAQAN,EAAAO,QAAAC,IACAA,EAAAC,UAAAC,OAAA,YANAN,EAAAC,OAAAC,QAAA,yBAAAG,UAAAE,IAAA,aAUA,SAAAC,gBAAAb,GACA,MAAAc,EAAAd,EAAAe,cAAA,4BACAC,EAAAhB,EAAAe,cAAA,mBACAE,EAAAjB,EAAAG,iBAAA,+BAEA,IAAAe,GAAA,EAsDA,SAAAC,EAAAL,GACA,MAAAM,EAAAN,EAAAP,QAAA,UAAAQ,cAAA,wBAEA,GAAAD,EAAAO,MAAAC,OAAA,CACA,MAAAD,EAAAP,EAAAO,MAAAC,OAEA,OAAA,oBAAAC,KAAAF,KACAD,EAAAI,YAAA,sBACA,GAMA,OADAJ,EAAAI,YAAA,eACA,EAlEAxB,EAAAI,iBAAA,SAAAC,IACA,IAAAoB,GAAA,EAEAR,EAAAT,QAAAC,IACAA,EAAAiB,UACAD,GAAA,KAIAP,EAAAO,EAEAP,GACAb,EAAAsB,iBACAX,EAAAN,UAAAE,IAAA,SAEAgB,WAAA,KACAZ,EAAAN,UAAAC,OAAA,UACA,OAEAO,EAAAC,EAAAL,GAEAI,IACAb,EAAAsB,iBACAb,EAAAP,QAAA,UAAAG,UAAAE,IAAA,SAEAgB,WAAA,KACAd,EAAAP,QAAA,UAAAG,UAAAC,OAAA,UACA,SAKAX,EAAAI,iBAAA,SAAAC,IACAA,EAAAC,OAAAuB,MACAb,EAAAN,UAAAC,OAAA,WAIAG,EAAAV,iBAAA,OAAA,KACAc,EAAAC,EAAAL,GAEAI,GACAJ,EAAAP,QAAA,UAAAG,UAAAE,IAAA,SAEAgB,WAAA,KACAd,EAAAP,QAAA,UAAAG,UAAAC,OAAA,UACA,MAEAG,EAAAP,QAAA,UAAAG,UAAAC,OAAA,WA4BAG,EALAV,iBAAA,QAAAC,IACAA,EAAAC,OAAAe,MAAAhB,EAAAC,OAAAe,MAAAS,QAAA,mBAAA,MAOA5B,SAAAE,iBAAA,mBAAA,KACA,GAAAF,SAAAa,cAAA,iBAAA,CAIAF,gBAHAX,SAAAa,cAAA","file":"../main.min.js","sourcesContent":["// ./../../node_modules/jquery/dist/jquery.min.js\r\n\r\nfunction paymentMethod(form) {\r\n  const methods = document.querySelectorAll('.payment-method__item');\r\n\r\n  form.addEventListener('change', e => {\r\n    if (e.target.closest('.payment-method__item')) {\r\n      deselect();\r\n\r\n      e.target.closest('.payment-method__item').classList.add('active');\r\n    }\r\n  });\r\n\r\n  function deselect() {\r\n    methods.forEach(item => {\r\n      item.classList.remove('active');\r\n    });\r\n  }\r\n}\r\nfunction paymentValidate(form) {\r\n  const email = form.querySelector('input[data-type=\"email\"]'),\r\n    payment = form.querySelector('.payment-method'),\r\n    paymentMethods = form.querySelectorAll('.payment-method__item input');\r\n\r\n  let error = false;\r\n\r\n  form.addEventListener('submit', e => {\r\n    let noMethod = true;\r\n\r\n    paymentMethods.forEach(item => {\r\n      if (item.checked) {\r\n        noMethod = false;\r\n      }\r\n    });\r\n\r\n    error = noMethod;\r\n\r\n    if (error) {\r\n      e.preventDefault();\r\n      payment.classList.add('error');\r\n\r\n      setTimeout(() => {\r\n        payment.classList.remove('error');\r\n      }, 5000);\r\n    } else {\r\n      error = checkEmail(email);\r\n\r\n      if (error) {\r\n        e.preventDefault();\r\n        email.closest('.input').classList.add('error');\r\n\r\n        setTimeout(() => {\r\n          email.closest('.input').classList.remove('error');\r\n        }, 5000);\r\n      }\r\n    }\r\n  });\r\n\r\n  form.addEventListener('change', e => {\r\n    if (e.target.name) {\r\n      payment.classList.remove('error');\r\n    }\r\n  });\r\n\r\n  email.addEventListener('blur', () => {\r\n    error = checkEmail(email);\r\n\r\n    if (error) {\r\n      email.closest('.input').classList.add('error');\r\n\r\n      setTimeout(() => {\r\n        email.closest('.input').classList.remove('error');\r\n      }, 5000);\r\n    } else {\r\n      email.closest('.input').classList.remove('error');\r\n    }\r\n  });\r\n\r\n  function checkEmail(email) {\r\n    const caption = email.closest('.input').querySelector('.error-caption__text');\r\n\r\n    if (email.value.trim()) {\r\n      const value = email.value.trim();\r\n\r\n      if (!/^\\w+@\\w+\\.\\w{2,}$/.test(value)) {\r\n        caption.textContent = 'Некорректный email';\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    } else {\r\n      caption.textContent = 'Введи email';\r\n      return true;\r\n    }\r\n  }\r\n\r\n  function checkEmailOnInput(item) {\r\n    item.addEventListener('input', e => {\r\n      e.target.value = e.target.value.replace(/[^A-Z1-9@\\-_.]/gi, '');\r\n    });\r\n  }\r\n\r\n  checkEmailOnInput(email);\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  if (document.querySelector('.payment-form')) {\r\n    const form = document.querySelector('form');\r\n\r\n    // paymentMethod(form);\r\n    paymentValidate(form);\r\n  }\r\n});"]}